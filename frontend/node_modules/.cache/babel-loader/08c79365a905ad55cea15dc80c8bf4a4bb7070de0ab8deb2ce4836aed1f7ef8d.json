{"ast":null,"code":"var _jsxFileName = \"E:\\\\Django\\\\StudyBud FullStack\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useEffect } from \"react\";\nimport jwtDecode from \"jwt-decode\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setUserId, setUser, setAuthTokens, setLoading, setUserName, setUserEmail, setIsLoggedIn, setPrevLocation } from \"../redux/userData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const {\n    user,\n    authTokens,\n    userId,\n    userName,\n    userEmail,\n    isLoggedIn,\n    loading,\n    userData,\n    prevLocation\n  } = useSelector(state => state.userData);\n  let loginUser = async (email, password) => {\n    const response = await fetch(\"http://127.0.0.1:8000/token/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email: email,\n        password: password\n      })\n    });\n    let data = await response.json();\n    if (data) {\n      localStorage.setItem(\"authTokens\", JSON.stringify(data));\n      dispatch(setAuthTokens(data));\n      dispatch(setUser(jwtDecode(data.access)));\n      dispatch(setUserId(data.user_id));\n      dispatch(setUserEmail(data.email));\n      dispatch(setUserName(data.username));\n      dispatch(setIsLoggedIn(true));\n      if (prevLocation) {\n        navigate(prevLocation);\n      } else {\n        navigate(\"/\");\n      }\n    } else {\n      alert(\"Something went wrong while logging in the user!\");\n    }\n  };\n  let logoutUser = () => {\n    localStorage.removeItem(\"authTokens\");\n    dispatch(setAuthTokens(null));\n    dispatch(setUser(null));\n    dispatch(setUserId(null));\n    dispatch(setUserEmail(null));\n    dispatch(setUserName(null));\n    dispatch(setIsLoggedIn(false));\n  };\n  const updateToken = async () => {\n    const response = await fetch(\"http://127.0.0.1:8000/token/refresh/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        refresh: authTokens === null || authTokens === void 0 ? void 0 : authTokens.refresh\n      })\n    });\n    const data = await response.json();\n    if (response.status === 200) {\n      dispatch(setAuthTokens(data));\n      dispatch(setUser(jwtDecode(data.access)));\n      localStorage.setItem(\"authTokens\", JSON.stringify(data));\n    } else {\n      logoutUser();\n    }\n    if (loading) {\n      dispatch(setLoading(false));\n    }\n  };\n  let contextData = {\n    user,\n    authTokens,\n    loginUser,\n    logoutUser,\n    userId,\n    userName,\n    userEmail,\n    isLoggedIn,\n    userData\n  };\n  useEffect(() => {\n    if (loading) {\n      updateToken();\n    }\n    const REFRESH_INTERVAL = 1000 * 30 * 1; // 24 minutes\n    let interval = setInterval(() => {\n      if (authTokens) {\n        updateToken();\n        console.log(\"UseEffect In Play!\");\n        console.log(authTokens);\n      }\n    }, REFRESH_INTERVAL);\n    return () => clearInterval(interval);\n  }, [authTokens, loading]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextData,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"dJK+ZovbkuGQP/WAUoLGZX6Tkrw=\", false, function () {\n  return [useDispatch, useNavigate, useSelector];\n});\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useEffect","jwtDecode","useNavigate","useDispatch","useSelector","setUserId","setUser","setAuthTokens","setLoading","setUserName","setUserEmail","setIsLoggedIn","setPrevLocation","AuthContext","AuthProvider","children","dispatch","navigate","user","authTokens","userId","userName","userEmail","isLoggedIn","loading","userData","prevLocation","state","loginUser","email","password","response","fetch","method","headers","body","JSON","stringify","data","json","localStorage","setItem","access","user_id","username","alert","logoutUser","removeItem","updateToken","refresh","status","contextData","REFRESH_INTERVAL","interval","setInterval","console","log","clearInterval"],"sources":["E:/Django/StudyBud FullStack/frontend/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useEffect } from \"react\";\r\nimport jwtDecode from \"jwt-decode\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  setUserId,\r\n  setUser,\r\n  setAuthTokens,\r\n  setLoading,\r\n  setUserName,\r\n  setUserEmail,\r\n  setIsLoggedIn,\r\n  setPrevLocation,\r\n} from \"../redux/userData\";\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const {\r\n    user,\r\n    authTokens,\r\n    userId,\r\n    userName,\r\n    userEmail,\r\n    isLoggedIn,\r\n    loading,\r\n    userData,\r\n    prevLocation,\r\n  } = useSelector((state) => state.userData);\r\n\r\n  let loginUser = async (email, password) => {\r\n    const response = await fetch(\"http://127.0.0.1:8000/token/\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        email: email,\r\n        password: password,\r\n      }),\r\n    });\r\n\r\n    let data = await response.json();\r\n\r\n    if (data) {\r\n      localStorage.setItem(\"authTokens\", JSON.stringify(data));\r\n      dispatch(setAuthTokens(data));\r\n      dispatch(setUser(jwtDecode(data.access)));\r\n      dispatch(setUserId(data.user_id));\r\n      dispatch(setUserEmail(data.email));\r\n      dispatch(setUserName(data.username));\r\n      dispatch(setIsLoggedIn(true));\r\n      if (prevLocation) {\r\n        navigate(prevLocation);\r\n      } else {\r\n        navigate(\"/\");\r\n      }\r\n    } else {\r\n      alert(\"Something went wrong while logging in the user!\");\r\n    }\r\n  };\r\n\r\n  let logoutUser = () => {\r\n    localStorage.removeItem(\"authTokens\");\r\n    dispatch(setAuthTokens(null));\r\n    dispatch(setUser(null));\r\n    dispatch(setUserId(null));\r\n    dispatch(setUserEmail(null));\r\n    dispatch(setUserName(null));\r\n    dispatch(setIsLoggedIn(false));\r\n  };\r\n\r\n  const updateToken = async () => {\r\n    const response = await fetch(\"http://127.0.0.1:8000/token/refresh/\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ refresh: authTokens?.refresh }),\r\n    });\r\n\r\n    const data = await response.json();\r\n    if (response.status === 200) {\r\n      dispatch(setAuthTokens(data));\r\n      dispatch(setUser(jwtDecode(data.access)));\r\n      localStorage.setItem(\"authTokens\", JSON.stringify(data));\r\n    } else {\r\n      logoutUser();\r\n    }\r\n\r\n    if (loading) {\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\n  let contextData = {\r\n    user,\r\n    authTokens,\r\n    loginUser,\r\n    logoutUser,\r\n    userId,\r\n    userName,\r\n    userEmail,\r\n    isLoggedIn,\r\n    userData,\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (loading) {\r\n      updateToken();\r\n    }\r\n\r\n    const REFRESH_INTERVAL = 1000 * 30 * 1; // 24 minutes\r\n    let interval = setInterval(() => {\r\n      if (authTokens) {\r\n        updateToken();\r\n        console.log(\"UseEffect In Play!\");\r\n        console.log(authTokens);\r\n      }\r\n    }, REFRESH_INTERVAL);\r\n    return () => clearInterval(interval);\r\n  }, [authTokens, loading]);\r\n\r\n  return (\r\n    <AuthContext.Provider value={contextData}>{children}</AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;\r\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,SAAS,QAAQ,OAAO;AAChD,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SACEC,SAAS,EACTC,OAAO,EACPC,aAAa,EACbC,UAAU,EACVC,WAAW,EACXC,YAAY,EACZC,aAAa,EACbC,eAAe,QACV,mBAAmB;AAAC;AAE3B,MAAMC,WAAW,gBAAGd,aAAa,EAAE;AAEnC,OAAO,MAAMe,YAAY,GAAG,QAAkB;EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC;EACvC,MAAMC,QAAQ,GAAGb,WAAW,EAAE;EAC9B,MAAMc,QAAQ,GAAGf,WAAW,EAAE;EAE9B,MAAM;IACJgB,IAAI;IACJC,UAAU;IACVC,MAAM;IACNC,QAAQ;IACRC,SAAS;IACTC,UAAU;IACVC,OAAO;IACPC,QAAQ;IACRC;EACF,CAAC,GAAGtB,WAAW,CAAEuB,KAAK,IAAKA,KAAK,CAACF,QAAQ,CAAC;EAE1C,IAAIG,SAAS,GAAG,OAAOC,KAAK,EAAEC,QAAQ,KAAK;IACzC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;MAC3DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBR,KAAK,EAAEA,KAAK;QACZC,QAAQ,EAAEA;MACZ,CAAC;IACH,CAAC,CAAC;IAEF,IAAIQ,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,EAAE;IAEhC,IAAID,IAAI,EAAE;MACRE,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEL,IAAI,CAACC,SAAS,CAACC,IAAI,CAAC,CAAC;MACxDtB,QAAQ,CAACT,aAAa,CAAC+B,IAAI,CAAC,CAAC;MAC7BtB,QAAQ,CAACV,OAAO,CAACL,SAAS,CAACqC,IAAI,CAACI,MAAM,CAAC,CAAC,CAAC;MACzC1B,QAAQ,CAACX,SAAS,CAACiC,IAAI,CAACK,OAAO,CAAC,CAAC;MACjC3B,QAAQ,CAACN,YAAY,CAAC4B,IAAI,CAACT,KAAK,CAAC,CAAC;MAClCb,QAAQ,CAACP,WAAW,CAAC6B,IAAI,CAACM,QAAQ,CAAC,CAAC;MACpC5B,QAAQ,CAACL,aAAa,CAAC,IAAI,CAAC,CAAC;MAC7B,IAAIe,YAAY,EAAE;QAChBT,QAAQ,CAACS,YAAY,CAAC;MACxB,CAAC,MAAM;QACLT,QAAQ,CAAC,GAAG,CAAC;MACf;IACF,CAAC,MAAM;MACL4B,KAAK,CAAC,iDAAiD,CAAC;IAC1D;EACF,CAAC;EAED,IAAIC,UAAU,GAAG,MAAM;IACrBN,YAAY,CAACO,UAAU,CAAC,YAAY,CAAC;IACrC/B,QAAQ,CAACT,aAAa,CAAC,IAAI,CAAC,CAAC;IAC7BS,QAAQ,CAACV,OAAO,CAAC,IAAI,CAAC,CAAC;IACvBU,QAAQ,CAACX,SAAS,CAAC,IAAI,CAAC,CAAC;IACzBW,QAAQ,CAACN,YAAY,CAAC,IAAI,CAAC,CAAC;IAC5BM,QAAQ,CAACP,WAAW,CAAC,IAAI,CAAC,CAAC;IAC3BO,QAAQ,CAACL,aAAa,CAAC,KAAK,CAAC,CAAC;EAChC,CAAC;EAED,MAAMqC,WAAW,GAAG,YAAY;IAC9B,MAAMjB,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,EAAE;MACnEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEY,OAAO,EAAE9B,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAE8B;MAAQ,CAAC;IACvD,CAAC,CAAC;IAEF,MAAMX,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,EAAE;IAClC,IAAIR,QAAQ,CAACmB,MAAM,KAAK,GAAG,EAAE;MAC3BlC,QAAQ,CAACT,aAAa,CAAC+B,IAAI,CAAC,CAAC;MAC7BtB,QAAQ,CAACV,OAAO,CAACL,SAAS,CAACqC,IAAI,CAACI,MAAM,CAAC,CAAC,CAAC;MACzCF,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEL,IAAI,CAACC,SAAS,CAACC,IAAI,CAAC,CAAC;IAC1D,CAAC,MAAM;MACLQ,UAAU,EAAE;IACd;IAEA,IAAItB,OAAO,EAAE;MACXR,QAAQ,CAACR,UAAU,CAAC,KAAK,CAAC,CAAC;IAC7B;EACF,CAAC;EAED,IAAI2C,WAAW,GAAG;IAChBjC,IAAI;IACJC,UAAU;IACVS,SAAS;IACTkB,UAAU;IACV1B,MAAM;IACNC,QAAQ;IACRC,SAAS;IACTC,UAAU;IACVE;EACF,CAAC;EAEDzB,SAAS,CAAC,MAAM;IACd,IAAIwB,OAAO,EAAE;MACXwB,WAAW,EAAE;IACf;IAEA,MAAMI,gBAAgB,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;IACxC,IAAIC,QAAQ,GAAGC,WAAW,CAAC,MAAM;MAC/B,IAAInC,UAAU,EAAE;QACd6B,WAAW,EAAE;QACbO,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;QACjCD,OAAO,CAACC,GAAG,CAACrC,UAAU,CAAC;MACzB;IACF,CAAC,EAAEiC,gBAAgB,CAAC;IACpB,OAAO,MAAMK,aAAa,CAACJ,QAAQ,CAAC;EACtC,CAAC,EAAE,CAAClC,UAAU,EAAEK,OAAO,CAAC,CAAC;EAEzB,oBACE,QAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAE2B,WAAY;IAAA,UAAEpC;EAAQ;IAAA;IAAA;IAAA;EAAA,QAAwB;AAE/E,CAAC;AAAC,GAhHWD,YAAY;EAAA,QACNX,WAAW,EACXD,WAAW,EAYxBE,WAAW;AAAA;AAAA,KAdJU,YAAY;AAkHzB,eAAeD,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}