{"ast":null,"code":"var _jsxFileName = \"E:\\\\Django\\\\StudyBud FullStack\\\\frontend\\\\src\\\\pages\\\\HomePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from \"react\";\nimport AuthContext from \"../context/AuthContext\";\nimport TopicsListMini from \"../components/TopicsListMini\";\nimport RoomsList from \"../components/RoomsList\";\nimport ActivitiesList from \"../components/ActivitiesList\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n\n  // Retrieve the topicID query parameter\n  const topicID = queryParams.get(\"topicID\");\n\n  // Check if topicID is available\n  if (!topicID) {\n    console.log(topicID);\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"layout layout--3\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(TopicsListMini, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RoomsList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ActivitiesList, {\n        restRoute: \"GetMessages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = HomePage;\nexport default HomePage;\n\n// const { authTokens, logoutUser } = useContext(AuthContext);\n// let [profile, setProfile] = useState([]);\n// let { user, userId, userName, userEmail, isLoggedIn } =\n//   useContext(AuthContext);\n\n// // console.log(isLoggedIn);\n\n// useEffect(() => {\n//   if (isLoggedIn) {\n//     getProfile();\n//   }\n// }, []);\n// const getProfile = async () => {\n//   let response = await fetch(\n//     \"http://127.0.0.1:8000/GetUserProfile/\" + user.user_id,\n//     {\n//       method: \"GET\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         Authorization: \"Bearer \" + String(authTokens.access),\n//       },\n//     }\n//   );\n//   let data = await response.json();\n//   if (response.status === 200) {\n//     setProfile(data);\n//   } else if (response.statusText === \"Unauthorized\") {\n//     logoutUser();\n//   }\n// };\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","useContext","AuthContext","TopicsListMini","RoomsList","ActivitiesList","useLocation","HomePage","location","queryParams","URLSearchParams","search","topicID","get","console","log"],"sources":["E:/Django/StudyBud FullStack/frontend/src/pages/HomePage.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport AuthContext from \"../context/AuthContext\";\r\nimport TopicsListMini from \"../components/TopicsListMini\";\r\nimport RoomsList from \"../components/RoomsList\";\r\nimport ActivitiesList from \"../components/ActivitiesList\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst HomePage = () => {\r\n  const location = useLocation();\r\n  const queryParams = new URLSearchParams(location.search);\r\n\r\n  // Retrieve the topicID query parameter\r\n  const topicID = queryParams.get(\"topicID\");\r\n\r\n  // Check if topicID is available\r\n  if (!topicID) {\r\n    console.log(topicID);\r\n  }\r\n\r\n  return (\r\n    <main className=\"layout layout--3\">\r\n      <div className=\"container\">\r\n        {/* Topics Start */}\r\n        <TopicsListMini></TopicsListMini>\r\n        {/* Topics End */}\r\n\r\n        {/* Room List Start */}\r\n        <RoomsList />\r\n        {/* Room List End */}\r\n\r\n        {/* Activities Start */}\r\n        <ActivitiesList restRoute=\"GetMessages\" />\r\n        {/* Activities End */}\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n\r\n// const { authTokens, logoutUser } = useContext(AuthContext);\r\n// let [profile, setProfile] = useState([]);\r\n// let { user, userId, userName, userEmail, isLoggedIn } =\r\n//   useContext(AuthContext);\r\n\r\n// // console.log(isLoggedIn);\r\n\r\n// useEffect(() => {\r\n//   if (isLoggedIn) {\r\n//     getProfile();\r\n//   }\r\n// }, []);\r\n// const getProfile = async () => {\r\n//   let response = await fetch(\r\n//     \"http://127.0.0.1:8000/GetUserProfile/\" + user.user_id,\r\n//     {\r\n//       method: \"GET\",\r\n//       headers: {\r\n//         \"Content-Type\": \"application/json\",\r\n//         Authorization: \"Bearer \" + String(authTokens.access),\r\n//       },\r\n//     }\r\n//   );\r\n//   let data = await response.json();\r\n//   if (response.status === 200) {\r\n//     setProfile(data);\r\n//   } else if (response.statusText === \"Unauthorized\") {\r\n//     logoutUser();\r\n//   }\r\n// };\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC9D,OAAOC,WAAW,MAAM,wBAAwB;AAChD,OAAOC,cAAc,MAAM,8BAA8B;AACzD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,cAAc,MAAM,8BAA8B;AACzD,SAASC,WAAW,QAAQ,kBAAkB;AAAC;AAE/C,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACrB,MAAMC,QAAQ,GAAGF,WAAW,EAAE;EAC9B,MAAMG,WAAW,GAAG,IAAIC,eAAe,CAACF,QAAQ,CAACG,MAAM,CAAC;;EAExD;EACA,MAAMC,OAAO,GAAGH,WAAW,CAACI,GAAG,CAAC,SAAS,CAAC;;EAE1C;EACA,IAAI,CAACD,OAAO,EAAE;IACZE,OAAO,CAACC,GAAG,CAACH,OAAO,CAAC;EACtB;EAEA,oBACE;IAAM,SAAS,EAAC,kBAAkB;IAAA,uBAChC;MAAK,SAAS,EAAC,WAAW;MAAA,wBAExB,QAAC,cAAc;QAAA;QAAA;QAAA;MAAA,QAAkB,eAIjC,QAAC,SAAS;QAAA;QAAA;QAAA;MAAA,QAAG,eAIb,QAAC,cAAc;QAAC,SAAS,EAAC;MAAa;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA;EAEtC;IAAA;IAAA;IAAA;EAAA,QACD;AAEX,CAAC;AAAC,GA7BIL,QAAQ;EAAA,QACKD,WAAW;AAAA;AAAA,KADxBC,QAAQ;AA+Bd,eAAeA,QAAQ;;AAEvB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}