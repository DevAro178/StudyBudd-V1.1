{"ast":null,"code":"var _jsxFileName = \"E:\\\\Django\\\\StudyBud FullStack\\\\frontend\\\\src\\\\pages\\\\HomePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from \"react\";\nimport AuthContext from \"../context/AuthContext\";\nimport TopicsListMini from \"../components/TopicsListMini\";\nimport RoomsList from \"../components/RoomsList\";\nimport ActivitiesList from \"../components/ActivitiesList\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  let [activitiesRoute, setActivitiesRoute] = useState(\"GetMessages\");\n  let [roomListRoute, setRoomList] = useState(\"GetRooms\");\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n\n  // Retrieve the topicID query parameter\n  const topicID = queryParams.get(\"topicID\") ? queryParams.get(\"topicID\") : null;\n  useEffect(() => {\n    if (topicID) {\n      console.log(topicID);\n      setActivitiesRoute(`GetMessagesByTopicID/${topicID}`);\n      setRoomList(`GetRoomsByTopicID/${topicID}`);\n    }\n  }, [topicID]);\n\n  // useEffect(() => {\n  //   console.log(activitiesRoute, roomListRoute);\n  // }, [activitiesRoute, roomListRoute]);\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"layout layout--3\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(TopicsListMini, {\n        id: topicID\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RoomsList, {\n        restRoute: roomListRoute\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ActivitiesList, {\n        restRoute: activitiesRoute\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"AD4u2hb4YLBTb4CV+eQiW94+HU8=\", false, function () {\n  return [useLocation];\n});\n_c = HomePage;\nexport default HomePage;\n\n// const { authTokens, logoutUser } = useContext(AuthContext);\n// let [profile, setProfile] = useState([]);\n// let { user, userId, userName, userEmail, isLoggedIn } =\n//   useContext(AuthContext);\n\n// // console.log(isLoggedIn);\n\n// useEffect(() => {\n//   if (isLoggedIn) {\n//     getProfile();\n//   }\n// }, []);\n// const getProfile = async () => {\n//   let response = await fetch(\n//     \"http://127.0.0.1:8000/GetUserProfile/\" + user.user_id,\n//     {\n//       method: \"GET\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         Authorization: \"Bearer \" + String(authTokens.access),\n//       },\n//     }\n//   );\n//   let data = await response.json();\n//   if (response.status === 200) {\n//     setProfile(data);\n//   } else if (response.statusText === \"Unauthorized\") {\n//     logoutUser();\n//   }\n// };\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","useContext","AuthContext","TopicsListMini","RoomsList","ActivitiesList","useLocation","HomePage","activitiesRoute","setActivitiesRoute","roomListRoute","setRoomList","location","queryParams","URLSearchParams","search","topicID","get","console","log"],"sources":["E:/Django/StudyBud FullStack/frontend/src/pages/HomePage.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport AuthContext from \"../context/AuthContext\";\r\nimport TopicsListMini from \"../components/TopicsListMini\";\r\nimport RoomsList from \"../components/RoomsList\";\r\nimport ActivitiesList from \"../components/ActivitiesList\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst HomePage = () => {\r\n  let [activitiesRoute, setActivitiesRoute] = useState(\"GetMessages\");\r\n  let [roomListRoute, setRoomList] = useState(\"GetRooms\");\r\n\r\n  const location = useLocation();\r\n  const queryParams = new URLSearchParams(location.search);\r\n\r\n  // Retrieve the topicID query parameter\r\n  const topicID = queryParams.get(\"topicID\")\r\n    ? queryParams.get(\"topicID\")\r\n    : null;\r\n\r\n  useEffect(() => {\r\n    if (topicID) {\r\n      console.log(topicID);\r\n      setActivitiesRoute(`GetMessagesByTopicID/${topicID}`);\r\n      setRoomList(`GetRoomsByTopicID/${topicID}`);\r\n    }\r\n  }, [topicID]);\r\n\r\n  // useEffect(() => {\r\n  //   console.log(activitiesRoute, roomListRoute);\r\n  // }, [activitiesRoute, roomListRoute]);\r\n\r\n  return (\r\n    <main className=\"layout layout--3\">\r\n      <div className=\"container\">\r\n        {/* Topics Start */}\r\n        <TopicsListMini id={topicID} />\r\n        {/* Topics End */}\r\n\r\n        {/* Room List Start */}\r\n        <RoomsList restRoute={roomListRoute} />\r\n        {/* Room List End */}\r\n\r\n        {/* Activities Start */}\r\n        <ActivitiesList restRoute={activitiesRoute} />\r\n        {/* Activities End */}\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n\r\n// const { authTokens, logoutUser } = useContext(AuthContext);\r\n// let [profile, setProfile] = useState([]);\r\n// let { user, userId, userName, userEmail, isLoggedIn } =\r\n//   useContext(AuthContext);\r\n\r\n// // console.log(isLoggedIn);\r\n\r\n// useEffect(() => {\r\n//   if (isLoggedIn) {\r\n//     getProfile();\r\n//   }\r\n// }, []);\r\n// const getProfile = async () => {\r\n//   let response = await fetch(\r\n//     \"http://127.0.0.1:8000/GetUserProfile/\" + user.user_id,\r\n//     {\r\n//       method: \"GET\",\r\n//       headers: {\r\n//         \"Content-Type\": \"application/json\",\r\n//         Authorization: \"Bearer \" + String(authTokens.access),\r\n//       },\r\n//     }\r\n//   );\r\n//   let data = await response.json();\r\n//   if (response.status === 200) {\r\n//     setProfile(data);\r\n//   } else if (response.statusText === \"Unauthorized\") {\r\n//     logoutUser();\r\n//   }\r\n// };\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC9D,OAAOC,WAAW,MAAM,wBAAwB;AAChD,OAAOC,cAAc,MAAM,8BAA8B;AACzD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,cAAc,MAAM,8BAA8B;AACzD,SAASC,WAAW,QAAQ,kBAAkB;AAAC;AAE/C,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACrB,IAAI,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,aAAa,CAAC;EACnE,IAAI,CAACW,aAAa,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,UAAU,CAAC;EAEvD,MAAMa,QAAQ,GAAGN,WAAW,EAAE;EAC9B,MAAMO,WAAW,GAAG,IAAIC,eAAe,CAACF,QAAQ,CAACG,MAAM,CAAC;;EAExD;EACA,MAAMC,OAAO,GAAGH,WAAW,CAACI,GAAG,CAAC,SAAS,CAAC,GACtCJ,WAAW,CAACI,GAAG,CAAC,SAAS,CAAC,GAC1B,IAAI;EAERjB,SAAS,CAAC,MAAM;IACd,IAAIgB,OAAO,EAAE;MACXE,OAAO,CAACC,GAAG,CAACH,OAAO,CAAC;MACpBP,kBAAkB,CAAE,wBAAuBO,OAAQ,EAAC,CAAC;MACrDL,WAAW,CAAE,qBAAoBK,OAAQ,EAAC,CAAC;IAC7C;EACF,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;;EAEb;EACA;EACA;;EAEA,oBACE;IAAM,SAAS,EAAC,kBAAkB;IAAA,uBAChC;MAAK,SAAS,EAAC,WAAW;MAAA,wBAExB,QAAC,cAAc;QAAC,EAAE,EAAEA;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAG,eAI/B,QAAC,SAAS;QAAC,SAAS,EAAEN;MAAc;QAAA;QAAA;QAAA;MAAA,QAAG,eAIvC,QAAC,cAAc;QAAC,SAAS,EAAEF;MAAgB;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA;EAE1C;IAAA;IAAA;IAAA;EAAA,QACD;AAEX,CAAC;AAAC,GAzCID,QAAQ;EAAA,QAIKD,WAAW;AAAA;AAAA,KAJxBC,QAAQ;AA2Cd,eAAeA,QAAQ;;AAEvB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}